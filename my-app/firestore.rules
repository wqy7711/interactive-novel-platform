rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /stories/{storyId} {
      allow read: if resource.data.status == 'approved' || 
                  (isAuthenticated() && (resource.data.authorId == request.auth.uid || isAdmin()));
      
      allow create: if isAuthenticated() && request.resource.data.authorId == request.auth.uid;
      
      allow update: if isAuthenticated() && (resource.data.authorId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && (resource.data.authorId == request.auth.uid || isAdmin());
    }
    
    match /favorites/{favoriteId} {
      allow read, create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    match /bookmarks/{bookmarkId} {
      allow read, create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    match /comments/{commentId} {
      allow read: if true;
      
      allow create: if isAuthenticated() && 
                    request.resource.data.userId == request.auth.uid && 
                    request.resource.data.status == 'pending';
      
      allow update: if isAuthenticated() && 
                    ((resource.data.userId == request.auth.uid && 
                     request.resource.data.text == resource.data.text && 
                     request.resource.data.status == resource.data.status) || 
                    isAdmin());
      
      allow delete: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    match /comment_likes/{likeId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    match /ai_requests/{requestId} {
      allow read, create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
    }
  }
}